version: "3.6"
services:
  rabbitmq:
    image: rabbitmq:3.11.2-management-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: unless-stopped

  postgres:
    image: postgres:14.5
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    command: postgres -c 'max_connections=315' -c 'shared_buffers=256MB'

  redis:
    image: redis:7.0.5-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

  influxdb:
    image: influxdb:2.5.0
    expose:
      - "8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-12345678}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-digma}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-errors}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_BUCKET_RETENTION:-24w}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN:-dc61908e-05bc-411a-9fe2-e3356b8dc7c0}
      - INFLUXD_QUERY_CONCURRENCY=15
      - INFLUXD_QUERY_QUEUE_SIZE=200
    restart: unless-stopped

  digma-collector-api:
    image: digmatic/digma-collector
    ports:
      - "5050:5050"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - CacheSettings__RedisConnection=${REDIS_CONNECTION:-redis}
      - ConnectionStrings__Postgres=Server=${POSTGRES_SERVER:-postgres};Port=${POSTGRES_SERVER_PORT:-5432};Database=digma_analytics;User Id=${POSTGRES_USER:-postgres};Password=${POSTGRES_PWD:-postgres};
      - influx2__Url=http://${INFLUXDB_URL:-influxdb}:8086
      - RabbitMq__Host=${RabbitMq_Host:-rabbitmq}
      - RabbitMq__Username=${RabbitMq_Username:-admin}
      - RabbitMq__Password=${RabbitMq_Password:-admin}
    depends_on:
      - redis
      - influxdb
      - rabbitmq
    restart: unless-stopped

  digma-plugin-api:
    image: digmatic/digma-plugin-api
    ports:
      - "5051:5051"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - CacheSettings__RedisConnection=${REDIS_CONNECTION:-redis}
      - influx2__Url=http://${INFLUXDB_URL:-influxdb}:8086
      - AnalyticsUrl=http://${ANALYTICS_URL:-digma-analytics}:5052
    restart: unless-stopped

  digma-analytics:
    image: digmatic/digma-analytics
    environment:
      # - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - influx2__Url=http://${INFLUXDB_URL:-influxdb}:8086
      - ConnectionStrings__Postgres=Server=${POSTGRES_SERVER:-postgres};Port=${POSTGRES_SERVER_PORT:-5432};Database=digma_analytics;User Id=${POSTGRES_USER:-postgres};Password=${POSTGRES_PWD:-postgres};
      - RabbitMq__Host=${RabbitMq_Host:-rabbitmq}
      - RabbitMq__Username=${RabbitMq_Username:-admin}
      - RabbitMq__Password=${RabbitMq_Password:-admin}
      - CacheSettings__RedisConnection=${REDIS_CONNECTION:-redis}
    depends_on:
      - influxdb
      - postgres
      - rabbitmq
    restart: unless-stopped

  digma-measurement-analysis:
    image: digmatic/digma-measurement-analysis:0.2.15
    environment:
      - influx2__Url=http://${INFLUXDB_URL:-influxdb}:8086
      - RabbitMq__Host=${RabbitMq_Host:-rabbitmq}
      - RabbitMq__Username=${RabbitMq_Username:-admin}
      - RabbitMq__Password=${RabbitMq_Password:-admin}
      - CacheSettings__RedisConnection=${REDIS_CONNECTION:-redis}
      - OtlpExporterUrl=
    depends_on:
      - influxdb
      - rabbitmq
    restart: unless-stopped

  digma-insight-analysis:
    image: digmatic/digma-insight-analysis:0.2.15
    environment:
      - influx2__Url=http://${INFLUXDB_URL:-influxdb}:8086
      - ConnectionStrings__Postgres=Server=${POSTGRES_SERVER:-postgres};Port=${POSTGRES_SERVER_PORT:-5432};Database=digma_analytics;User Id=${POSTGRES_USER:-postgres};Password=${POSTGRES_PWD:-postgres};
      - RabbitMq__Host=${RabbitMq_Host:-rabbitmq}
      - RabbitMq__Username=${RabbitMq_Username:-admin}
      - RabbitMq__Password=${RabbitMq_Password:-admin}
      - CacheSettings__RedisConnection=${REDIS_CONNECTION:-redis}
      - OtlpExporterUrl=
    depends_on:
      - influxdb
      - postgres
      - rabbitmq
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.38.1
    container_name: jaeger
    ports:
      - "16686"
      - "14250"
      - "0.0.0.0:14268:14268"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=${REDIS_CONNECTION:-redis}
    ports:
      - "8081"
    depends_on:
      - redis
    restart: unless-stopped

  collector:
    image: digmatic/configured-otel-collector:latest
    command: ["--config=/otel-local-config.yaml"]
    ports:
      #- "0.0.0.0:8889:8889"   # Prometheus exporter metrics
      - "0.0.0.0:4317:4317" # OTLP receiver
    depends_on:
      - jaeger
    environment:
      - OTLP_EXPORTER_DIGMA_COLLECTOR_API=host.docker.internal:5060
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  apm-server:
    container_name: elastic-apm-server
    image: "docker.elastic.co/apm/apm-server:7.17.7"
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    # ports:
    #   - '8200:8200'
    command: |
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: >-
        curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://elasticsearch:8200/
    restart: unless-stopped

  elasticsearch:
    container_name: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.7"
    expose:
      - "9200"
    # ports:
    #   - '9200:9200'
    volumes:
      - "elasticsearch-data:/usr/share/elasticsearch/data"
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: "docker.elastic.co/kibana/kibana:7.17.7"
    ports:
      - "5601"
    depends_on:
      - elasticsearch
    environment:
      - "ELASTICSEARCH_URL=http://localhost:9200"
      - xpack.apm.enabled=false
    restart: unless-stopped

volumes:
  rabbitmq_data:
  rabbitmq_log:
  postgres_data:
  redis_data:
  influxdb_data:
  influxdb_config:
  elasticsearch-data: null
  pgadmin_data:

networks:
  default:
    name: digma-network
